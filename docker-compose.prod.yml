services:
  db:
    image: postgres:16.3
    container_name: webback-chat-postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "127.0.0.1:5434:5432" 
    volumes:
      - chat_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - chat-network

  chat-service:
    image: ${IMAGE_REF}
    container_name: webback-chat-service
    ports:
      - "127.0.0.1:3003:3003"
    environment:
      - DB_ADDR=${DB_ADDR}
      - DB_MIGRATIONS_PATH=${DB_MIGRATIONS_PATH}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - chat-network
      - webback-net
      - traefik_default
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webback-chat.rule=Host(`chat.webroom.k5sha.xyz`)"
      - "traefik.http.routers.webback-chat.entrypoints=https"
      - "traefik.http.routers.webback-chat.tls=true"
      - "traefik.http.routers.webback-chat.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.webback-chat.service=webback-auth"
      - "traefik.http.services.webback-chat.loadbalancer.server.url=http://webback-auth-service:8083"

volumes:
  chat_data:

networks:
  chat-network:
    driver: bridge
  webback-net:
    external: true
  traefik_default:
    external: true
